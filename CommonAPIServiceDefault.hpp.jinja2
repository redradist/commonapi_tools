{%- set service_version = interface.major -%}
{%- set service_name = interface.name -%}
{%- set package_fs = interface.package_name.replace('.', '/') -%}
{%- set package_ns = interface.package_name.replace('.', '::') -%}
{%- set methods = interface.methods -%}
{%- set broadcasts = interface.broadcasts -%}
{%- set attributes = interface.attributes -%}
{%- set class_name = service_name+'Service' -%}
/**
 * @file {{class_name}}.hpp
 * @date {{date}}
 * @brief It is an auto-generated file.
 * It example of template for CommonAPI Service.
 * This class is useless and should be used only like example.
 * See project ICC: https://github.com/redradist/Inter-Component-Communication.git where this class is mature
 * @copyright Denis Kotov, MIT License. Open source: https://github.com/redradist/Inter-Component-Communication.git
 */

#ifndef _{{class_name.upper()}}_HPP_
#define _{{class_name.upper()}}_HPP_

#include <string>
#include <vector>
#include <map>
#include <memory>
#include <functional>
#include <v{{service_version}}/{{package_fs}}/{{service_name}}StubDefault.hpp>

class {{class_name}}
  : public v{{service_version}}::{{package_ns}}::{{service_name}}StubDefault {
 public:
  using v{{service_version}}::{{package_ns}}::{{service_name}}StubDefault::{{service_name}}StubDefault;
  virtual ~{{class_name}}() = default;

 public:
  {%- if methods is not none and methods|length > 0 %}
  /***************************************
   * Below methods for receiving requests
   **************************************/
  {%- for method in methods %}
  void {{method.name}}(const std::shared_ptr<CommonAPI::ClientId> _client
  {%- if method.inputs is not none -%}
  {{- ", " -}}{%- for input in method.inputs -%}
    {{input.type}} _{{input.name}}{{ ", " if not loop.last }}
  {%- endfor -%}
  {%- endif -%}
  {%- if method.outputs is not none -%}
  {{- ", " -}}{{method.name}}Reply_t _reply
  {%- endif -%}
  ) override {
    // Default implementation.
    // It is useless realization and exists only for showing API
  }
  {%- endfor %}
  {% endif %}
};

#endif  // _{{class_name.upper()}}_HPP_
